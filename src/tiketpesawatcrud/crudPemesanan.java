package tiketpesawatcrud;

import java.awt.HeadlessException;
import java.sql.*;
import java.util.Date;
import java.sql.PreparedStatement;
import java.awt.Image;
import java.awt.Image.*;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author Durian
 */
public class crudPemesanan extends javax.swing.JInternalFrame {
//private JSpinner startTimeSpinner;
//private JSpinner endTimeSpinner;
//
//private void addTimeChoosers() {
//    startTimeSpinner = createTimeSpinner();
//    endTimeSpinner = createTimeSpinner();
//
//    // Assuming you have panels for each spinner
//    this.startTimePanel.add(startTimeSpinner);
//    this.endTimePanel.add(endTimeSpinner);
//}
//
//private JSpinner createTimeSpinner() {
//    SpinnerDateModel model = new SpinnerDateModel();
//    model.setCalendarField(Calendar.HOUR_OF_DAY);
//    JSpinner spinner = new JSpinner(model);
//    JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, "HH:mm:ss");
//    spinner.setEditor(editor);
//    return spinner;
//}
//
//
//private String getTimeFromSpinner(JSpinner spinner) {
//    Date spinnerValue = (Date) spinner.getValue();
//    SimpleDateFormat formatter = new SimpleDateFormat("HH:mm:ss");
//    return formatter.format(spinnerValue);
//}

    /**
     * Creates new form addCustomer
     */
    public crudPemesanan() {
        initComponents();
//        addTimeChoosers();
        autoID();
        tampilDataPesawat();
        tampilDataCustomer();
        tampilDataPemesanan();
        prepareCmbTerbang();
        prepareCmbRute();

    }
    
    koneksi dbKoneksi = new koneksi();

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        popupMenu1 = new java.awt.PopupMenu();
        jSpinFieldBeanInfo1 = new com.toedter.components.JSpinFieldBeanInfo();
        jSpinFieldBeanInfo2 = new com.toedter.components.JSpinFieldBeanInfo();
        dateUtil1 = new com.toedter.calendar.DateUtil();
        dateChooserPanelBeanInfo1 = new com.toedter.calendar.demo.DateChooserPanelBeanInfo();
        birthdayEvaluator1 = new com.toedter.calendar.demo.BirthdayEvaluator();
        birthdayEvaluator2 = new com.toedter.calendar.demo.BirthdayEvaluator();
        jDateChooserBeanInfo1 = new com.toedter.calendar.JDateChooserBeanInfo();
        jYearChooserBeanInfo1 = new com.toedter.calendar.JYearChooserBeanInfo();
        jLocaleChooserBeanInfo1 = new com.toedter.components.JLocaleChooserBeanInfo();
        jCalendarBeanInfo1 = new com.toedter.calendar.JCalendarBeanInfo();
        jCalendarBeanInfo2 = new com.toedter.calendar.JCalendarBeanInfo();
        jDateChooserBeanInfo2 = new com.toedter.calendar.JDateChooserBeanInfo();
        jDayChooserBeanInfo1 = new com.toedter.calendar.JDayChooserBeanInfo();
        jCalendarBeanInfo3 = new com.toedter.calendar.JCalendarBeanInfo();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtPembeli = new javax.swing.JTextField();
        txtPesawat = new javax.swing.JTextField();
        spinJumlahPenumpang = new com.toedter.components.JSpinField();
        jPanel3 = new javax.swing.JPanel();
        txtId = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtHargaSatu = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtTotalHarga = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtRute = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtTotalBayar = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        cmbCariPemesanan = new javax.swing.JComboBox<>();
        txtCariPemesanan = new java.awt.TextField();
        btnCariPemesanan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbTerbang = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        cmbCariPesawat = new javax.swing.JComboBox<>();
        txtCariPesawat = new java.awt.TextField();
        btnCariPesawat = new javax.swing.JButton();
        tanggalCari = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPemesanan = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbCust = new javax.swing.JTable();
        cmbCariCust = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtCariCust = new java.awt.TextField();
        btnCariCust = new javax.swing.JButton();

        popupMenu1.setLabel("popupMenu1");

        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel4.setText("Jumlah Penumpang");

        jLabel5.setText("ID Pembeli");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        jLabel7.setText("Kode Pesawat");

        spinJumlahPenumpang.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                spinJumlahPenumpangInputMethodTextChanged(evt);
            }
        });

        txtId.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtId.setText("jLabel7");

        jLabel10.setText("Nomor Pesanan");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel10)
                .addGap(53, 53, 53)
                .addComponent(txtId)
                .addContainerGap(494, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtId))
                .addGap(11, 11, 11))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, txtId});

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("CRUD PEMESANAN");

        jLabel12.setText("ID User");

        jLabel13.setText("Harga / Orang");

        jLabel14.setText("Total Harga");

        jLabel9.setText("Kode Rute");

        jLabel15.setText("Total Bayar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPembeli)
                                    .addComponent(txtPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinJumlahPenumpang, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addGap(65, 65, 65)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnTambah)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnExit))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtTotalBayar, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtRute, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                                        .addComponent(txtHargaSatu)
                                        .addComponent(txtUser)
                                        .addComponent(txtTotalHarga)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExit, btnHapus, btnReset, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(spinJumlahPenumpang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHargaSatu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExit, btnHapus, btnReset, btnUpdate});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, jLabel7, txtPembeli, txtPesawat});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, spinJumlahPenumpang});

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));

        cmbCariPemesanan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kode_rute", "nama" }));
        cmbCariPemesanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCariPemesananActionPerformed(evt);
            }
        });

        txtCariPemesanan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCariPemesanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariPemesananActionPerformed(evt);
            }
        });

        btnCariPemesanan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCariPemesanan.setText("Cari");
        btnCariPemesanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariPemesananActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cari Data Pemesanan");

        tbTerbang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Pesawat", "Nama Pesawat", "Jumlah Kursi", "Harga", "Tanggal Berangkat", "Kode Rute"
            }
        ));
        tbTerbang.setRowHeight(40);
        tbTerbang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTerbangMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbTerbang);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Cari Data Penerbangan");

        cmbCariPesawat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kode_pesawat", "nama" }));
        cmbCariPesawat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCariPesawatActionPerformed(evt);
            }
        });

        txtCariPesawat.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCariPesawat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariPesawatActionPerformed(evt);
            }
        });

        btnCariPesawat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCariPesawat.setText("Cari");
        btnCariPesawat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariPesawatActionPerformed(evt);
            }
        });

        tbPemesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No Pesanan", "Jumlah Penumpang", "ID Pembeli", "Kode Pesawat", "Kode Rute", "ID User", "Harga", "Total Harga", "Total Bayar"
            }
        ));
        tbPemesanan.setToolTipText("");
        tbPemesanan.setRowHeight(40);
        tbPemesanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPemesananMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbPemesanan);

        tbCust.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Usia", "Alamat", "Telepon", "Foto"
            }
        ));
        tbCust.setRowHeight(40);
        tbCust.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCustMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbCust);

        cmbCariCust.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "id", "nama" }));
        cmbCariCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCariCustActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Cari Data Customer");

        txtCariCust.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCariCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariCustActionPerformed(evt);
            }
        });

        btnCariCust.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCariCust.setText("Cari");
        btnCariCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariCustActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(cmbCariCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtCariCust, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(btnCariCust))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(cmbCariPemesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtCariPemesanan, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCariPemesanan))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(cmbCariPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tanggalCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(txtCariPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(btnCariPesawat)))
                        .addGap(0, 124, Short.MAX_VALUE))
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCariPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCariPesawat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tanggalCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnCariPesawat, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCariCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCariCust)
                    .addComponent(txtCariCust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCariPemesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCariPemesanan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCariPemesanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCariPemesanan, cmbCariPemesanan});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCariPemesananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariPemesananActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariPemesananActionPerformed

    private void btnCariPemesananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariPemesananActionPerformed

        tampilDataPemesanan();
        tampilDataPesawat();

    }//GEN-LAST:event_btnCariPemesananActionPerformed

    private void cmbCariPemesananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCariPemesananActionPerformed
     
    }//GEN-LAST:event_cmbCariPemesananActionPerformed

    private void tbTerbangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTerbangMouseClicked
     int selectedRow = tbTerbang.getSelectedRow();
if (selectedRow >= 0) {
    // Get data from tbTerbang
    String id = tbTerbang.getValueAt(selectedRow, 0).toString();
    String kodeRute = tbTerbang.getValueAt(selectedRow, 5).toString();
    String harga = tbTerbang.getValueAt(selectedRow, 3).toString();

    txtPesawat.setText(id);
    txtRute.setText(kodeRute);
    txtHargaSatu.setText(harga);
    totalHargaChange();
    autoID();
    tampilDataPemesanan();

} else {
    JOptionPane.showMessageDialog(this, "Please select a row to view details.");
}

    }//GEN-LAST:event_tbTerbangMouseClicked


    private void cmbCariPesawatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCariPesawatActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_cmbCariPesawatActionPerformed

    private void txtCariPesawatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariPesawatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariPesawatActionPerformed

    private void btnCariPesawatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariPesawatActionPerformed
        // TODO add your handling code here:
        tampilDataPesawat();
    }//GEN-LAST:event_btnCariPesawatActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        String id = txtId.getText();
        int jumlahPenumpang = (int) spinJumlahPenumpang.getValue();
         int idPembeli = Integer.parseInt(txtPembeli.getText());
      double harga = Double.parseDouble(txtHargaSatu.getText());
        int kodeRute = Integer.parseInt(txtRute.getText());
        int kodePesawat = Integer.parseInt(txtPesawat.getText()); // Replace this with the appropriate value from your application
        int idUser = Integer.parseInt(txtUser.getText());    // Replace this with the appropriate value from your application
        double totalHarga = Double.parseDouble(txtTotalHarga.getText()); // Replace this with the appropriate value from your application
        double totalBayar = Double.parseDouble(txtTotalBayar.getText()); // Replace this with the appropriate value from your application

             
// Insert data into the database
try {
    con = dbKoneksi.getConnection();
    pst = con.prepareStatement("INSERT INTO `pemesanan` (`no_pesanan`, `jumlah_penumpang`, `id_pembeli`, `kode_pesawat`, `kode_rute`, `id_user`, `harga`, `total_harga`, `total_bayar`) VALUES (?,?,?,?,?,?,?,?,?);");
    pst.setString(1, id);
    pst.setInt(2, jumlahPenumpang);
    pst.setInt(3, idPembeli);         // Set idUser
    pst.setInt(4, kodePesawat);    // Set kodePesawat
    pst.setInt(5, kodeRute);
    pst.setInt(6, idUser);
    pst.setDouble(7, harga);
    pst.setDouble(8, totalHarga);
    pst.setDouble(9, totalBayar);


    // Execute the update
    int rowsAffected = pst.executeUpdate();
    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "Registration Successful");
        tampilDataPemesanan();
        tampilDataPesawat();
        resetForm();
        autoID();
    } else {
        JOptionPane.showMessageDialog(null, "Registration Failed");
    }
} catch (SQLException ex) {
    Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
} finally {
    // Close resources in the finally block
    try {
        if (pst != null) {
            pst.close();
        }
        if (con != null) {
            con.close();
        }
    } catch (SQLException ex) {
        Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
    }
}

    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        try {
            // Establish database connection
            con = dbKoneksi.getConnection();

            // Get the selected column name and value
            String id = txtId.getText();

            // Construct the SQL query
            String query = "DELETE FROM pemesanan WHERE no_pesanan = ?";
            pst = con.prepareStatement(query);
            pst.setString(1, id);

            // Execute the delete query
            int rowsAffected = pst.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Delete Successful");
                // Optionally, you can clear/reset the form or update the table view
                tampilDataPemesanan();
                resetForm();
                autoID();
            } else {
                JOptionPane.showMessageDialog(null, "No records deleted. Please check your input.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
        } finally {
            // Close resources
            try {
                if (pst != null) pst.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        resetForm();
        autoID();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    // Get the data from the input fields
// TODO add your handling code here:
String id = txtId.getText();
int jumlahPenumpang = (int) spinJumlahPenumpang.getValue();
int idPembeli = Integer.parseInt(txtPembeli.getText());
double harga = Double.parseDouble(txtHargaSatu.getText());
int kodeRute = Integer.parseInt(txtRute.getText());
int kodePesawat = Integer.parseInt(txtPesawat.getText()); // Replace this with the appropriate value from your application
int idUser = Integer.parseInt(txtUser.getText()); // Replace this with the appropriate value from your application
double totalHarga = Double.parseDouble(txtTotalHarga.getText()); // Replace this with the appropriate value from your application
double totalBayar = Double.parseDouble(txtTotalBayar.getText()); // Replace this with the appropriate value from your application

// Update data in the database
try {
    con = dbKoneksi.getConnection();
    pst = con.prepareStatement("UPDATE `pemesanan` SET `jumlah_penumpang` = ?, `id_pembeli` = ?, `kode_pesawat` = ?, `kode_rute` = ?, `id_user` = ?, `harga` = ?, `total_harga` = ?, `total_bayar` = ? WHERE `no_pesanan` = ?;");
    pst.setInt(1, jumlahPenumpang);
    pst.setInt(2, idPembeli);
    pst.setInt(3, kodePesawat);
    pst.setInt(4, kodeRute);
    pst.setInt(5, idUser);
    pst.setDouble(6, harga);
    pst.setDouble(7, totalHarga);
    pst.setDouble(8, totalBayar);
    pst.setString(9, id);

    // Execute the update
    int rowsAffected = pst.executeUpdate();
    if (rowsAffected > 0) {
        JOptionPane.showMessageDialog(null, "Update Successful");
        tampilDataPemesanan();
        resetForm();
        autoID();
    } else {
        JOptionPane.showMessageDialog(null, "Update Failed");
    }
} catch (SQLException ex) {
    Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
    JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
} finally {
    // Close resources in the finally block
    try {
        if (pst != null) {
            pst.close();
        }
        if (con != null) {
            con.close();
        }
    } catch (SQLException ex) {
        Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
    }
}

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbPemesananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPemesananMouseClicked
     
        int selectedRow = tbPemesanan.getSelectedRow();
if (selectedRow >= 0) {
    // Get data from tbPemesanan
    String nomor_pemesanan = tbPemesanan.getValueAt(selectedRow, 0).toString();
    int jumlahPenumpang = (int) tbPemesanan.getValueAt(selectedRow, 1);
    int idPembeli = (int) tbPemesanan.getValueAt(selectedRow, 2); // Assuming ID Pembeli is double
    int kodePesawat = (int) tbPemesanan.getValueAt(selectedRow, 3);
    int kodeRute = (int) tbPemesanan.getValueAt(selectedRow, 4);
    int idUser = (int) tbPemesanan.getValueAt(selectedRow, 5);
    double harga = (double) tbPemesanan.getValueAt(selectedRow, 6); // Assuming Harga is double
    double totalHarga = (double) tbPemesanan.getValueAt(selectedRow, 7); // Assuming Total Harga is double
    double totalBayar = (double) tbPemesanan.getValueAt(selectedRow, 8); // Assuming Total Harga is double

    // Set the retrieved values to the respective fields
    txtId.setText(nomor_pemesanan);
    spinJumlahPenumpang.setValue(jumlahPenumpang);
    txtPembeli.setText(String.valueOf(idPembeli));
    txtPesawat.setText(String.valueOf(kodePesawat));
    txtRute.setText(String.valueOf(kodeRute));
    txtUser.setText(String.valueOf(idUser));
    txtHargaSatu.setText(String.valueOf(harga));
    txtTotalHarga.setText(String.valueOf(totalHarga));
    txtTotalBayar.setText(String.valueOf(totalBayar));

    // Set other fields accordingly

    // Auto-generate new ID
} else {
    JOptionPane.showMessageDialog(this, "Please select a row to view details.");
}

    }//GEN-LAST:event_tbPemesananMouseClicked

    private void tbCustMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCustMouseClicked
        
            int selectedRow = tbCust.getSelectedRow();
            if (selectedRow >= 0) {
                    // Retrieve data from each column in the selected row
                          String id = tbCust.getValueAt(selectedRow, 0).toString();
               
                          
                          txtPembeli.setText(id);
                          autoID();

                    } else {
                        JOptionPane.showMessageDialog(this, "No data found for the selected row.");
                    }
       
    }//GEN-LAST:event_tbCustMouseClicked

    private void cmbCariCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCariCustActionPerformed

    }//GEN-LAST:event_cmbCariCustActionPerformed

    private void txtCariCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariCustActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariCustActionPerformed

    private void btnCariCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariCustActionPerformed

        tampilDataCustomer();
    }//GEN-LAST:event_btnCariCustActionPerformed

    private void spinJumlahPenumpangInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_spinJumlahPenumpangInputMethodTextChanged
        // TODO add your handling code here:
         totalHargaChange();
        tampilDataPemesanan();
    }//GEN-LAST:event_spinJumlahPenumpangInputMethodTextChanged
class MyTableModelCust extends DefaultTableModel {
    public MyTableModelCust() {
        super(new Object[]{"ID", "Nama", "Usia", "Alamat", "Telepon", "Foto"}, 0);
    }

    @Override
    public Class<?> getColumnClass(int columnIndex) {
        return columnIndex == 5 ? Icon.class : super.getColumnClass(columnIndex);
    }
}
    
    private Icon createImageIcon(byte[] bytes, int width, int height) {
    if (bytes == null) {
        return null;
    }
    return new ImageIcon(new ImageIcon(bytes).getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH));
}
    class MyTableModel extends DefaultTableModel {
    public MyTableModel() {
        super(new Object[]{"No Pesanan", "Jumlah Penumpang", "ID Pembeli", "Kode Pesawat","Kode Rute", "ID User", "Harga", "Total Harga", "Total Biaya"}, 0);
    }

    @Override
    public Class<?> getColumnClass(int columnIndex) {
        return columnIndex == 10 ? Icon.class : super.getColumnClass(columnIndex);
    }
}
    
      class MyTableModelTerbang extends DefaultTableModel {
    public MyTableModelTerbang() {
        super(new Object[]{"Kode Pesawat", "Nama Pesawat", "Jumlah Kursi", "Harga","Tanggal Berangkat", "Kode Rute"}, 0);
    }

    @Override
    public Class<?> getColumnClass(int columnIndex) {
        return columnIndex == 6 ? Icon.class : super.getColumnClass(columnIndex);
    }
}
    
      private void totalHargaChange(){
      int jumlahPenumpang = (int) spinJumlahPenumpang.getValue();
        double harga = Double.parseDouble(txtHargaSatu.getText());
        double totalHarga = jumlahPenumpang * harga;

// Convert totalHarga to String before setting it to txtTotalHarga
txtTotalHarga.setText(String.valueOf(totalHarga));

      }

private void tampilDataPemesanan() {
    Logger logger = Logger.getLogger(crudPemesanan.class.getName());
       
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        String columnName = (String) cmbCariPemesanan.getSelectedItem();
        String columnValue = txtCariPemesanan.getText();

        con = dbKoneksi.getConnection();
        logger.info("Database connection established successfully.");

        String query = "SELECT * FROM pemesanan";
        if (!columnValue.isEmpty()) {
            query += " WHERE " + columnName + " LIKE ?";
                columnValue = "%" + columnValue + "%";
        }

        pst = con.prepareStatement(query);
        if (!columnValue.isEmpty()) {
            pst.setString(1, columnValue);
        }
        rs = pst.executeQuery();
        logger.info("Query executed successfully.");

        // Populate table with retrieved data
        MyTableModel model = new MyTableModel();

        while (rs.next()) {
            Object[] data = {
                rs.getString(1),
                rs.getInt(2),
                rs.getInt(3),
                rs.getInt(4),
                rs.getInt(5),
                rs.getInt(6),
                rs.getDouble(7),
                rs.getDouble(8),
                rs.getDouble(9),



            };
            model.addRow(data);
        }
        logger.info("Rows added to the table.");

        tbPemesanan.setModel(model);
        logger.info("Table model set successfully.");
    } catch (SQLException ex) {
        logger.log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (con != null) dbKoneksi.closeConnection();
            logger.info("Database resources closed successfully.");
        } catch (SQLException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
    }
}

private void tampilDataPesawat() {
    Logger logger = Logger.getLogger(crudPemesanan.class.getName());

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        String columnName = (String) cmbCariPesawat.getSelectedItem();
        String columnValue = txtCariPesawat.getText();

        con = dbKoneksi.getConnection();
        logger.info("Database connection established successfully.");

        String query = "SELECT * FROM penerbangan";

        // Check if the selected column is 'tanggal_berangkat' and a date is selected for filtering
        if ("tanggal_berangkat".equals(columnName) && tanggalCari.getDate() != null) {
            query += " WHERE tanggal_berangkat = ?";
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            columnValue = sdf.format(tanggalCari.getDate());
        } else if (!columnValue.isEmpty()) {
            // If a specific column is selected for filtering and the search input is not empty
            query += " WHERE " + columnName + (columnName.equals("kode_pesawat") ? " = ?" : " LIKE ?");
            if (!columnName.equals("kode_pesawat")) {
                columnValue = "%" + columnValue + "%";
            }
        }

        pst = con.prepareStatement(query);
        if (!columnValue.isEmpty()) {
            pst.setString(1, columnValue);
        }
        rs = pst.executeQuery();
        logger.info("Query executed successfully.");
        

        // Populate table with retrieved data
        MyTableModelTerbang model = new MyTableModelTerbang();

        while (rs.next()) {
            Object[] data = {
                rs.getString("kode_pesawat"),
                rs.getString("nama_pesawat"),
                rs.getInt("jumlah_kursi"),
                rs.getDouble("harga"),
                rs.getDate("tanggal_berangkat"),
                rs.getInt("kode_rute")
            };
            model.addRow(data);
        }
        logger.info("Rows added to the table.");

        tbTerbang.setModel(model);
        logger.info("Table model set successfully.");
        tanggalCari.setDate(null);
    } catch (SQLException ex) {
        logger.log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (con != null) con.close();
            logger.info("Database resources closed successfully.");
        } catch (SQLException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
    }
}



 private void tampilDataCustomer() {
    Logger logger = Logger.getLogger(crudCustomer.class.getName());

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    try {
        String columnName = "";
        String columnValue = txtCariCust.getText();

        if (cmbCariCust.getSelectedItem().equals("id")) {
             columnName = "id";
    } else if (cmbCariCust.getSelectedItem().equals("nama")) {
             columnName = "nama";
    } else if (cmbCariCust.getSelectedItem().equals("usia")) {
             columnName = "usia";
    } else if (cmbCariCust.getSelectedItem().equals("alamat")) {
             columnName = "alamat";
    } else if (cmbCariCust.getSelectedItem().equals("telepon")) {
             columnName = "telepon";
    } else {
    // Handle the case when none of the predefined options are selected
    }

        con = dbKoneksi.getConnection();
        logger.info("Database connection established successfully.");

        String query = "SELECT * FROM pembeli";
        if (!columnValue.isEmpty()) {
            query += " WHERE " + columnName + (columnName.equals("id") ? " = ?" : " LIKE ?");
            if (!columnName.equals("id")) {
                columnValue = "%" + columnValue + "%";
            }
        }

        pst = con.prepareStatement(query);
        if (!columnValue.isEmpty()) {
            pst.setString(1, columnValue);
        }
        rs = pst.executeQuery();
        logger.info("Query executed successfully.");

        // Populate table with retrieved data
        MyTableModelCust model = new MyTableModelCust();
        int iconWidth = 60; // Set icon width
        int iconHeight = 60; // Set icon height

        while (rs.next()) {
            Object[] data = {
                rs.getString("id"),
                rs.getString("nama"),
                rs.getInt("usia"),
                rs.getString("alamat"),
                rs.getString("telepon"),
                createImageIcon(rs.getBytes("foto"), iconWidth, iconHeight)
            };
            model.addRow(data);
        }
        logger.info("Rows added to the table.");

        tbCust.setModel(model);
        logger.info("Table model set successfully.");
    } catch (SQLException ex) {
        logger.log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "SQL Error: " + ex.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (pst != null) pst.close();
            if (con != null) con.close();
            logger.info("Database resources closed successfully.");
        } catch (SQLException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
    }
}

   


    

private void prepareCmbRute() {
    try {
        // Establish database connection
        con = dbKoneksi.getConnection();
        // Create a SQL statement to retrieve data from the database
        String query = "SELECT * FROM rute";
        pst = con.prepareStatement(query);

        // Execute the query
        ResultSet rs = pst.executeQuery();

        // Clear existing items in the combo box
        cmbCariPemesanan.removeAllItems();

        // Get the metadata of the ResultSet to retrieve column names
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();

        // Add column names as items to the combo box
        for (int i = 1; i <= columnCount - 1; i++) {
            cmbCariPemesanan.addItem(metaData.getColumnName(i));
        }

        // Close resources
        rs.close();
        pst.close();
        con.close();
    } catch (SQLException ex) {
        // Handle SQL exception
        ex.printStackTrace();
    }
}
private void prepareCmbTerbang() {
    try {
        // Establish database connection
        con = dbKoneksi.getConnection();
        // Create a SQL statement to retrieve data from the database
        String query = "SELECT * FROM penerbangan";
        pst = con.prepareStatement(query);

        // Execute the query
        ResultSet rs = pst.executeQuery();

        // Clear existing items in the combo box
        cmbCariPesawat.removeAllItems();

        // Get the metadata of the ResultSet to retrieve column names
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();

        // Add column names as items to the combo box
        for (int i = 1; i <= columnCount - 1; i++) {
            cmbCariPesawat.addItem(metaData.getColumnName(i));
        }

        // Close resources
        rs.close();
        pst.close();
        con.close();
    } catch (SQLException ex) {
        // Handle SQL exception
        ex.printStackTrace();
    }
}

private void prepareCmbCust() {
    try {
        // Establish database connection
        con = dbKoneksi.getConnection();
        // Create a SQL statement to retrieve data from the database
        String query = "SELECT * FROM pembeli";
        PreparedStatement pst = con.prepareStatement(query);

        // Execute the query
        ResultSet rs = pst.executeQuery();

        // Clear existing items in the combo box
        cmbCariCust.removeAllItems();

        // Get the metadata of the ResultSet to retrieve column names
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();

        // Add column names as items to the combo box
        for (int i = 1; i <= columnCount - 1; i++) {
            cmbCariCust.addItem(metaData.getColumnName(i));
        }

        // Close resources
        rs.close();
        pst.close();
        con.close();
    } catch (SQLException ex) {
        // Handle SQL exception
        ex.printStackTrace();
    }
}



    
  private void autoID() {
    try {
        Connection con = dbKoneksi.getConnection();
        Statement s = con.createStatement();
        ResultSet rs = s.executeQuery("SELECT MAX(CAST(SUBSTRING(no_pesanan, 5) AS UNSIGNED)) AS max_id FROM pemesanan");

        if (rs.next()) {
            String maxId = rs.getString("max_id");
            if (maxId != null) {
                int newId = Integer.parseInt(maxId) + 1;
                txtId.setText("INV/" + newId + "/D`Airplane");
                System.out.println("New ID: " + txtId.getText()); // Debug output
            } else {
                // If no records exist, start from 1
                txtId.setText("INV/1/D`Airplane");
                System.out.println("Initial ID: " + txtId.getText()); // Debug output
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(crudPemesanan.class.getName()).log(Level.SEVERE, null, ex);
        // Print error message for debugging
        System.err.println("Error occurred while generating ID: " + ex.getMessage());
    }
}



    private void resetForm(){
      txtCariPemesanan.setText("");
      txtCariCust.setText("");
      txtCariPesawat.setText("");
      spinJumlahPenumpang.setValue(0);
      txtPembeli.setText("");
      txtRute.setText("");
      txtUser.setText("");
      txtPesawat.setText("");
      txtHargaSatu.setText("");
      txtTotalHarga.setText("");
      txtTotalBayar.setText("");
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.demo.BirthdayEvaluator birthdayEvaluator1;
    private com.toedter.calendar.demo.BirthdayEvaluator birthdayEvaluator2;
    private javax.swing.JButton btnCariCust;
    private javax.swing.JButton btnCariPemesanan;
    private javax.swing.JButton btnCariPesawat;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbCariCust;
    private javax.swing.JComboBox<String> cmbCariPemesanan;
    private javax.swing.JComboBox<String> cmbCariPesawat;
    private com.toedter.calendar.demo.DateChooserPanelBeanInfo dateChooserPanelBeanInfo1;
    private com.toedter.calendar.DateUtil dateUtil1;
    private com.toedter.calendar.JCalendarBeanInfo jCalendarBeanInfo1;
    private com.toedter.calendar.JCalendarBeanInfo jCalendarBeanInfo2;
    private com.toedter.calendar.JCalendarBeanInfo jCalendarBeanInfo3;
    private com.toedter.calendar.JDateChooserBeanInfo jDateChooserBeanInfo1;
    private com.toedter.calendar.JDateChooserBeanInfo jDateChooserBeanInfo2;
    private com.toedter.calendar.JDayChooserBeanInfo jDayChooserBeanInfo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.components.JLocaleChooserBeanInfo jLocaleChooserBeanInfo1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private com.toedter.components.JSpinFieldBeanInfo jSpinFieldBeanInfo1;
    private com.toedter.components.JSpinFieldBeanInfo jSpinFieldBeanInfo2;
    private com.toedter.calendar.JYearChooserBeanInfo jYearChooserBeanInfo1;
    private java.awt.PopupMenu popupMenu1;
    private com.toedter.components.JSpinField spinJumlahPenumpang;
    private com.toedter.calendar.JDateChooser tanggalCari;
    private javax.swing.JTable tbCust;
    private javax.swing.JTable tbPemesanan;
    private javax.swing.JTable tbTerbang;
    private java.awt.TextField txtCariCust;
    private java.awt.TextField txtCariPemesanan;
    private java.awt.TextField txtCariPesawat;
    private javax.swing.JTextField txtHargaSatu;
    private javax.swing.JLabel txtId;
    private javax.swing.JTextField txtPembeli;
    private javax.swing.JTextField txtPesawat;
    private javax.swing.JTextField txtRute;
    private javax.swing.JTextField txtTotalBayar;
    private javax.swing.JTextField txtTotalHarga;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
